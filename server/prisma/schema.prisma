generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = "mysql://afraadmin:@1234@localhost:3306/afrana"
}

// model User {
//   id    Int     @id @default(autoincrement())
//   email String  @unique
//   name  String?
//   posts Post[]
// }

// model Post {
//   id        Int      @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   title     String
//   content   String?
//   published Boolean  @default(false)
//   viewCount Int      @default(0)
//   author    User?    @relation(fields: [authorId], references: [id])
//   authorId  Int?
// }

enum UserRole {
  Doctor
  Secretary
  Admin
  SuperAdmin
}

enum UserState {
  Active
  Suspended
}

enum Gender {
  Male
  Female
}

model User {
  id          Int           @id @default(autoincrement())
  firstName   String
  lastName    String
  username    String        @unique
  password    String
  role        UserRole
  state       UserState
  AccessToken AccessToken[]
}

model AccessToken {
  id     Int    @id @default(autoincrement())
  userId Int
  user   User   @relation(fields: [userId], references: [id])
  hashed String
}

enum DrugType {
  B2
  Opium
  Metadon
}

model Patient {
  id         Int       @id @default(autoincrement())
  firstName  String
  lastName   String
  birthDate  DateTime
  nationalID String
  gender     Gender
  Dossier    Dossier[]
}

model Dossier {
  id        Int         @id @default(autoincrement())
  patient   Patient?    @relation(fields: [patientId], references: [id])
  patientId Int
  address   String
  phone     String
  landLine  String
  drugType  DrugType
  records   Reception[]
}

model Reception {
  id        Int      @id @default(autoincrement())
  datetime  DateTime @default(now())
  Dossier   Dossier? @relation(fields: [dossierId], references: [id])
  dossierId Int?
  drugDose  Int
}

model Settings {
  id               Int      @id @default(autoincrement())
  appStartDateTime DateTime
  baseDateTime     DateTime
  activeState      Boolean  @default(true)
}

model Storage {
  id           Int           @id @default(autoincrement())
  drug         DrugType
  quantiry     Int
  transactions Transaction[]
}

model Transaction {
  id         Int      @id @default(autoincrement())
  date       DateTime
  drug       DrugType
  amount     Int
  prevAmount Int
  Storage    Storage? @relation(fields: [storageId], references: [id])
  storageId  Int?
}
